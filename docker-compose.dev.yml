version: '3.9'

services:
  postgres:
    container_name: aprp-postgres
    image: postgres:14-alpine
    volumes:
      - aprp_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_HOST=localhost
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - main

  pgadmin:
    container_name: aprp-pgadmin
    image: dpage/pgadmin4:8.6
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pg-admin:/root/.pgadmin
    ports:
      - "5050:80"
    networks:
      - main
    restart: unless-stopped

  redis:
    container_name: aprp-redis
    hostname: redis
    image: redis:4.0
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - main

  redis-commander:
    container_name: aprp-redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8085:8081"
    depends_on:
      - "redis"
    networks:
      - main
    restart: on-failure

  web: &web
    container_name: web
    build:
      context: .
      target: dev
    env_file:
      - .env
#    environment:
#      - POSTGRES_DB=postgres
#      - POSTGRES_HOST=postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - SECRET_KEY=qd!xxe%zu_this_%8j$is_@#)$_dev_@#%%%_secret_key%)^
#      - DEBUG=True
#      - DJANGO_SETTINGS_MODULE=dashboard.configs.development
#      - JUPYTER_ALLOW_INSECURE_WRITES=1
#      - REDIS_HOST=redis
#      - PID_FILE=/app/celeryd.pid
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app
    entrypoint: /app/scripts/entrypoint.sh
    command:
      - "python"
      - "manage.py"
      - "runserver"
      - "0.0.0.0:8000"
    networks:
      - main

  worker:
    <<: *web
    container_name: aprp-worker
    ports: [ ]
    command:
      - 'celery --app=dashboard.mock_celery:app worker --pool=eventlet --concurrency=4  --loglevel=info'

  beat:
    <<: *web
    container_name: aprp-beat
    ports: [ ]
    command:
      - celery --app=dashboard.mock_celery:app beat --loglevel=info --pidfile=/app/celeryd.pid
#      - "python"
#      - "manage.py"
#      - "start_celery_beat"

  flower:
    container_name: aprp-flower
    image: mher/flower
    ports:
      - "49555:5555"
    networks:
      - main
    depends_on:
      - worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_UNAUTHENTICATED_API=true

  notebook:
    <<: *web
    container_name: aprp-notebook
    command:
      - python
      - manage.py
      - shell_plus
      - --notebook
    ports:
      - "8888:8888"

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - main

volumes:
  pg-data:
  redis-data:
  pg-admin:
  aprp_pg_data:
    external: true


networks:
  main:
    driver: bridge
